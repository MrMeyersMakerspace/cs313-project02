<!DOCTYPE html>

<html lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
    <meta charset="utf-8" />
    <title>Get Print jobs</title>
    <link rel="stylesheet" href="style.css" type="text/css" />
</head>

<body onload="loadPrintJobs()">
    <p>Please click on a button to view the print jobs in the specified order.</p>
    <div id="sortButtons">
        <button type="button" onclick="getPrintJobs('first')">Sort By First Name</button>
        <button type="button" onclick="getPrintJobs('last')">Sort By Last Name</button>
        <button type="button" onclick="getPrintJobs('print')">Sort By Print Name</button>
        <button type="button" onclick="getPrintJobs('status')">Sort By Print Status</button>
        <button type="button" onclick="getPrintJobs('color')">Sort By Color</button>
    </div>

    <!--Model for updating status-->
    <div id="myModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <p>Please select the new status for the print job</p>
            <select id="newStatus" name="newStatus" onchange="showTextBox(this)">
                <option value=1>Print job submitted</option>
                <option value=2>Model sliced</option>
                <option value=3>Model printing</option>
                <option value=4>Model printed and ready for pickup</option>
                <option value=5>Problem with model, fix and resubmit</option>
            </select>
            <br><br>
            <div id="errorEntry">
                <textarea id="newComment" name="newComment" placeholder="Enter Comment Here"></textarea>
                <br><br>
            </div>
            <button type="button" onclick="sendUpdate()">Update Print Job</button>
        </div>

    </div>
    <br>
    <br>
    <table id="printTable">
        <tr>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Print Name</th>
            <th>Print Source</th>
            <th>Print Use</th>
            <th>Print Color</th>
            <th>Type of Plastic</th>
            <th>Filename</th>
            <th>Google Drive URL</th>
            <th>Job Status</th>
            <th>Update Date</th>
            <th>Error Message</th>
        </tr>
    </table>

    <script>
        var updateID;
        var serverData;

        // Loads previous sort type for print jobs
        function loadPrintJobs() {
            var typeOfSort = sessionStorage.getItem("typeOfSort");
            if (typeOfSort !== null) {
                console.log(`typeOfSort = ${typeOfSort} & Call to database`);
                getPrintJobs(typeOfSort);
            } else {
                console.log(`typeOfSort = ${typeOfSort} & NO call to database`);
            }
        }

        // Gets the print job data from the server
        function getPrintJobs(type) {
            // Store sort method in sessionStorage in case of reload
            sessionStorage.setItem("typeOfSort", type);

            // Generate url for the type of sort of print jobs
            var url = "/sortPrintJobs?sortType=" + type;

            console.log("URL: " + url);

            var xhttp = new XMLHttpRequest();

            xhttp.onload = function () {
                if (this.readyState == 4 && this.status == 200) {
                    console.log("Got response from server: ")
                    console.log(this.reponse);

                    serverData = JSON.parse(this.responseText);

                    console.log(serverData);

                    renderPrintJobs(serverData);
                } else {
                    console.log("Server request failed")
                }
            };
            xhttp.open("get", url, true)
            xhttp.send();
        }

        // Displays the print jobs in a table that is color coded by status
        function renderPrintJobs(data) {
            var myTable = document.getElementById("printTable");
            var numItems;

            myTable.innerHTML = `<tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Print Name</th>
                <th>Print Source</th>
                <th>Print Use</th>
                <th>Print Color</th>
                <th>Type of Plastic</th>
                <th>Filename</th>
                <th>Google Drive URL</th>
                <th>Job Status</th>
                <th>Update Date</th>
                <th>Error Message</th>
            </tr>`;

            for (var i = 0; i < data.length; i++) {
                // Get row values
                var first = data[i].firstname;
                var last = data[i].lastname;
                var printname = data[i].printname;
                var source = data[i].modelsource;
                var use = data[i].printuse;
                var color = data[i].color;
                var material = data[i].printmaterial;
                var filename = data[i].filename;
                var driveurl = data[i].driveurl;
                var status = data[i].jobstatus;
                var date = data[i].statusdate;
                if (typeof data[i].errormessage !== 'undefined') {
                    var error = data[i].errormessage;
                    numItems = 12;
                } else {
                    numItems = 11;
                }
                var statusID = Number(data[i].statusid);

                // Check values in console
                console.log("Firstname: " + first);
                console.log("Lastname: " + last);
                console.log("Print Name: " + printname);
                console.log("Source: " + source);
                console.log("Print Use: " + use);
                console.log("Color: " + color);
                console.log("Firstname: " + material);
                console.log("Filename: " + filename);
                console.log("Google Drive URL: " + driveurl);
                console.log("Job Status: " + status);
                console.log("Data: " + date);
                if (typeof data[i].errormessage !== 'undefined') {
                    console.log("Error Message: " + error);
                }
                console.log("StatusID: " + statusID);

                // Create new row
                var row = myTable.insertRow();

                // Change color via class depending on job status
                switch (statusID) {
                    case 1:
                        row.className = "white";
                        break;
                    case 2:
                        row.className = "lightyellow";
                        break;
                    case 3:
                        row.className = "yellow";
                        break;
                    case 4:
                        row.className = "green";
                        break;
                    case 5:
                        row.className = "red";
                        break;
                    default:
                        console.log("SOMETHING BROKE IN SWITCH!")
                        break;
                }


                // Add cells into new row
                var cell1 = row.insertCell(0);
                var cell2 = row.insertCell(1);
                var cell3 = row.insertCell(2);
                var cell4 = row.insertCell(3);
                var cell5 = row.insertCell(4);
                var cell6 = row.insertCell(5);
                var cell7 = row.insertCell(6);
                var cell8 = row.insertCell(7);
                var cell9 = row.insertCell(8);
                var cell10 = row.insertCell(9);
                var cell11 = row.insertCell(10);
                var cell12 = row.insertCell(11);

                // Insert values into new cells
                cell1.innerHTML = first;
                cell2.innerHTML = last;
                cell3.innerHTML = printname;
                cell4.innerHTML = source;
                cell5.innerHTML = use;
                cell6.innerHTML = color;
                cell7.innerHTML = material;
                cell8.innerHTML = filename;
                cell9.innerHTML = driveurl;
                cell10.innerHTML = `<button type="button" onclick="updateStatus(${i})">${status}</button>`;
                cell11.innerHTML = date;
                if (typeof data[i].errormessage !== 'undefined') {
                    cell12.innerHTML = error;
                } else {
                    cell12.innerHTML = "";
                }
            }
        }

        // Brings up a modal to update the status of the print job
        function updateStatus(i) {
            // Get the modal
            var modal = document.getElementById("myModal");

            console.log("i = " + i);

            // Get the <span> element that closes the modal
            var span = document.getElementsByClassName("close")[0];

            modal.style.display = "block";

            // When the user clicks on <span> (x), close the modal
            span.onclick = function () {
                modal.style.display = "none";
            }

            // When the user clicks anywhere outside of the modal, close it
            window.onclick = function (event) {
                if (event.target == modal) {
                    modal.style.display = "none";
                }
            }

            // Get the jobid for the line that is having the job status updated in
            console.log(`i = ${i}`);
            updateID = serverData[i].jobid;
        }

        // Display's textarea for error only when "Problem with model" status is selected
        function showTextBox(selectValue) {
            if (selectValue.value == 5) {
                document.getElementById("errorEntry").style.display = "block";
            } else {
                document.getElementById("errorEntry").style.display = "none";
            }
        }

        // AJAX request to update the status of the selected print job
        function sendUpdate() {
            var newStatus = document.getElementById("newStatus").value;
            var element = document.getElementById("newComment");
            var newComment;

            // Get new error message from modal if set, otherwise clear it out
            if (element.value !== " ") {
                newComment = document.getElementById("newComment").value;
            } else {
                newComment = " ";
            }

            var url = `/updateStatus?updateID=${updateID}&comment=${newComment}&newStatus=${newStatus}`;

            console.log("URL: " + url);

            var xhttp = new XMLHttpRequest();

            xhttp.onload = function () {
                if (this.readyState == 4 && this.status == 200) {
                    console.log("Got response from server: ")
                    console.log(this.reponse);


                } else {
                    console.log("Server request failed")
                }
            };
            xhttp.open("get", url, true)
            xhttp.send();

            // Clear comment box, close modal, and refresh page so new print status appears
            element.value = "";
            document.getElementById("myModal").style.display = "none";
            document.location.reload();
        }
    </script>
</body>

</html>