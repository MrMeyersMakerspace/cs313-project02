<!DOCTYPE html>

<html lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="style.css" type="text/css" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <title>ThinkLab 3D Print Job Submission</title>
</head>

<body onload="startFill()">
    <h1 style="color: #ed6c21;">ThinkLab 3D Print Job Submission Page</h1>
    <p style="color: #ed6c21;">Please upload your file to your Google Drive and then fill out the form below to submit
        your model for 3D printing by Maker Meyers.</p>
    <hr>
    <form method="post" id="printJobForm" name="printJobForm" action="/submitPrintJob">
        <div class="formInput">
            <label>First Name: </label>
            <input type="text" id="firstname" name="firstname" placeholder="First Name" required>
        </div>
        <div class="formInput">
            <label>Last Name: </label>
            <input type="text" id="lastname" name="lastname" placeholder="Last Name" required>
        </div>
        <div class="formInput">
            <label>Name of Print: </label>
            <input type="text" id="printname" name="printname" placeholder="Name of Print" required>
        </div>
        <div class="formInput">
            <label>Select the source of the file: </label>
            <select id="source" name="source" required></select>
        </div>
        <div class="formInput">
            <label>Select how the print will be used: </label>
            <select id="use" name="use" required></select>
        </div>
        <div class="formInput">
            <label>Select the desired filament color: </label>
            <select id="color" name="color" required></select>
        </div>
        <div class="formInput">
            <label>Select type of plastic: </label>
            <select id="type" name="type" required></select>
        </div>
        <div class="formInput">
            <label>Filename of 3D model (.stl file): </label>
            <input type="text" size="50" id="filename" name="filename" placeholder="Filename" required>
        </div>
        <div class="formInput">
            <label>Link to file on Google Drive: </label>
            <input type="text" size="100" id="url" name="url" placeholder="Google Drive URL" required>
        </div>
        <br>
        <button type="submit">Submit Print Job</button>
    </form>
    <br>
    <br>
    <hr>
    <br>

    <h2 style="color: #ed6c21;">Check Print Status</h2>
    <p style="color: #ed6c21;">To check the status of your 3D print click on one of the buttons below to view current print jobs. They are color
        coded by status. White means it is submitted, light yellow is sliced, yellow is currently printing, green means
        print is complete, and red means there is some sort of error (check the error message).</p>
    <div id="sortButtons">
        <button type="button" onclick="getPrintJobs('first')">Sort By First Name</button>
        <button type="button" onclick="getPrintJobs('last')">Sort By Last Name</button>
        <button type="button" onclick="getPrintJobs('print')">Sort By Print Name</button>
        <button type="button" onclick="getPrintJobs('status')">Sort By Print Status</button>
    </div>
    <br>
    <br>
    <table id="printTable">

    </table>

    <script>
        function getPrintJobs(type) {
            var serverData;
            var url = "/sortPrintJobs?sortType=" + type;

            console.log("URL: " + url);

            var xhttp = new XMLHttpRequest();

            xhttp.onload = function () {
                if (this.readyState == 4 && this.status == 200) {
                    console.log("Got response from server: ")
                    console.log(this.reponse);

                    serverData = JSON.parse(this.responseText);

                    console.log(serverData);

                    renderPrintJobs(serverData);
                } else {
                    console.log("Server request failed")
                }
            };
            xhttp.open("get", url, true)
            xhttp.send();


        }

        function renderPrintJobs(data) {
            var myTable = document.getElementById("printTable");
            var numItems;

            myTable.innerHTML = `<tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Print Name</th>
                <th>Print Source</th>
                <th>Print Use</th>
                <th>Print Color</th>
                <th>Type of Plastic</th>
                <th>Filename</th>
                <th>Google Drive URL</th>
                <th>Job Status</th>
                <th>Update Date</th>
                <th>Error Message (if needed)</th>
            </tr>`;

            for (var i = 0; i < data.length; i++) {
                // Get row values
                var first = data[i].firstname;
                var last = data[i].lastname;
                var printname = data[i].printname;
                var source = data[i].modelsource;
                var use = data[i].printuse;
                var color = data[i].color;
                var material = data[i].printmaterial;
                var filename = data[i].filename;
                var driveurl = data[i].driveurl;
                var status = data[i].jobstatus;
                var date = data[i].statusdate;
                if (typeof data[i].errormessage !== 'undefined') {
                    var error = data[i].errormessage;
                    numItems = 12;
                } else {
                    numItems = 11;
                }
                var statusID = Number(data[i].statusid);

                // Check values in console
                console.log("Firstname: " + first);
                console.log("Lastname: " + last);
                console.log("Print Name: " + printname);
                console.log("Source: " + source);
                console.log("Print Use: " + use);
                console.log("Color: " + color);
                console.log("Firstname: " + material);
                console.log("Filename: " + filename);
                console.log("Google Drive URL: " + driveurl);
                console.log("Job Status: " + status);
                console.log("Data: " + date);
                if (typeof data[i].errormessage !== 'undefined') {
                    console.log("Error Message: " + error);
                }
                console.log("StatusID: " + statusID);

                // Create new row
                var row = myTable.insertRow();

                // Change color via class depending on job status
                switch (statusID) {
                    case 1:
                        row.className = "white";
                        break;
                    case 2:
                        row.className = "lightyellow";
                        break;
                    case 3:
                        row.className = "yellow";
                        break;
                    case 4:
                        row.className = "green";
                        break;
                    case 5:
                        row.className = "red";
                        break;
                    default:
                        console.log("SOMETHING BROKE IN SWITCH!")
                        break;
                }


                // Add cells into new row
                var cell1 = row.insertCell(0);
                var cell2 = row.insertCell(1);
                var cell3 = row.insertCell(2);
                var cell4 = row.insertCell(3);
                var cell5 = row.insertCell(4);
                var cell6 = row.insertCell(5);
                var cell7 = row.insertCell(6);
                var cell8 = row.insertCell(7);
                var cell9 = row.insertCell(8);
                var cell10 = row.insertCell(9);
                var cell11 = row.insertCell(10);
                var cell12 = row.insertCell(11);

                // Insert values into new cells
                cell1.innerHTML = first;
                cell2.innerHTML = last;
                cell3.innerHTML = printname;
                cell4.innerHTML = source;
                cell5.innerHTML = use;
                cell6.innerHTML = color;
                cell7.innerHTML = material;
                cell8.innerHTML = filename;
                cell9.innerHTML = driveurl;
                cell10.innerHTML = status;
                cell11.innerHTML = date;
                if (typeof data[i].errormessage !== 'undefined') {
                    cell12.innerHTML = error;
                } else {
                    cell12.innerHTML = "";
                }
            }
        }
    </script>









    <br>
    <br>
    <br>
    <br>
    <br>
    <br>
    <a href="/admin">Admin Page</a>
    <script>
        // Calls all required functions to fill data
        function startFill() {
            getServerValues('source');
            getServerValues('use');
            getServerValues('color');
            getServerValues('type');
        }

        // Gets values from server for specific table
        function getServerValues(table) {
            var serverData;
            var url = "/getOptions?table=" + table;

            console.log("URL: " + url);

            var xhttp = new XMLHttpRequest();

            xhttp.onload = function () {
                if (this.readyState == 4 && this.status == 200) {
                    console.log("Got response from server: ")
                    console.log(this.reponse);

                    serverData = JSON.parse(this.responseText);

                    console.log(serverData);

                    loadValues(serverData, table);
                } else {
                    console.log("Server request failed")
                }
            };
            xhttp.open("get", url, true)
            xhttp.send();
        }

        // Get options from the server and set select statements to have those options
        function loadValues(data, table) {
            // Load Table Values Into Form
            var sourceDOM = document.getElementById(table);
            for (var i = 0; i < data.length; i++) {
                addOptions(i, data, sourceDOM, table);
            }
        }

        // Adds options into the select from passed server data
        function addOptions(i, options, sel, table) {
            // create new option element
            var opt = document.createElement('option');

            // create text node to add to option element (opt) depending on table
            switch (table) {
                case "source":
                    opt.appendChild(document.createTextNode(options[i].modelsource));
                    break;
                case "use":
                    opt.appendChild(document.createTextNode(options[i].printuse));
                    break;
                case "color":
                    opt.appendChild(document.createTextNode(options[i].color));
                    break;
                case "type":
                    opt.appendChild(document.createTextNode(options[i].printmaterial));
                    break;
            }

            // set value property of opt
            opt.value = i + 1;

            // add opt to end of select box (sel)
            sel.appendChild(opt);
        }
    </script>

</body>

</html>